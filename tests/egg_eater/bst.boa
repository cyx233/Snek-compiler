(fun (add_element root value)
	(if (.= root (tuple false false false))
		(setindex! root 0 value)
		(let ((node_value (index! root 0))
				(left_node (index! root 1))
				(right_node (index! root 2)))
			(if (< value node_value)
				(if (isbool left_node)
					(setindex! root 1 (tuple value false false))
					(add_element left_node value)
				)
				(if (isbool right_node)
					(setindex! root 2 (tuple value false false))
					(add_element right_node value)
				)
			)
		)
	)
)

(fun (search_element root value)
	(if (isbool root)
		false
		(let ((node_value (index! root 0))
				(left_node (index! root 1))
				(right_node (index! root 2)))
			(if (= value node_value)
				true
				(if (< value node_value)
					(search_element left_node value)
					(search_element right_node value)
				)
			)
		)
	)
)

(let ((bst (tuple false false false)))
	(block
		(add_element bst 5)
		(add_element bst 3)
		(add_element bst 7)
		(add_element bst 1)
		(add_element bst 4)
		(print (search_element bst 4))
		(print (search_element bst 6))
		(search_element bst 8)
	)
)